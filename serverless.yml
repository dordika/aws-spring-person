service: spring-person-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  timeout: 15
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            Fn::GetAtt:
              - PersonDynamoDBTable
              - Arn

#Packaging information here
package:
  artifact: 'target/aws-spring-person-1-shaded.jar'

functions:
  postPerson:
    environment: # environment variables
      FUNCTION_NAME: 'postPerson'
    handler: com.serverless.awsspringperson.CloudHandler
    name: postPerson
    events: # api gateway
      - http:
          path: person
          method: post
          cors: true

  getPerson:
    environment:
      FUNCTION_NAME: 'getPerson'
    handler: com.serverless.awsspringperson.CloudHandler
    name: getPerson
    events:
      - http:
          path: persons
          method: get

# you can add CloudFormation resource templates here
resources:
  Resources:
    PersonDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: person-aws-spring
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: firstName
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: firstName
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1